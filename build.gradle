plugins {
	id 'java'
	id 'com.gradleup.shadow' version '8.3.6' // Latest stable, beta versions are available.
	id 'com.diffplug.spotless' version '7.0.2'
	id 'xyz.jpenilla.run-paper' version '2.3.1'
}

group = 'com.joshuadev'
version = '1.1-SNAPSHOT'

repositories {
	mavenCentral()
	maven {
		name = "papermc-repo"
		url = "https://repo.papermc.io/repository/maven-public/"
	}
	maven {
		name = "sonatype"
		url = "https://oss.sonatype.org/content/groups/public/"
	}
}

dependencies {
	compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
	implementation("org.incendo:cloud-paper:2.0.0-beta.10")
	implementation("org.incendo:cloud-annotations:2.0.0")
	annotationProcessor("org.incendo:cloud-annotations:2.0.0")
}

def targetJavaVersion = 21
java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	sourceCompatibility = javaVersion
	targetCompatibility = javaVersion
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'

	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		options.release.set(targetJavaVersion)
	}
}

spotless {
	format("misc") {
		target '**/*.gradle', '**/*.md'
		trimTrailingWhitespace()
		leadingSpacesToTabs()
		endWithNewline()
	}

	java {
		googleJavaFormat("1.25.2").aosp().reflowLongStrings().skipJavadocFormatting()
		formatAnnotations()
		licenseHeader '/* Licensed under GNU General Public License v3.0 */'
	}
}

tasks.shadowJar {
	enableRelocation = true
	relocationPrefix = "${rootProject.property('group')}.${rootProject.property('name').toString().toLowerCase()}.lib"
	minimize()
	archiveClassifier.set("")
}

tasks.build {
	dependsOn("shadowJar")
}

tasks.runServer {
	minecraftVersion '1.21.4'
	jvmArgs '-Dcom.mojang.eula.agree=true'
	minHeapSize '2G'
	maxHeapSize '2G'
}

processResources {
	def props = [version: version]
	inputs.properties props
	filteringCharset 'UTF-8'
	filesMatching('plugin.yml') {
		expand props
	}
}
